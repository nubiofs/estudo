var(x)
quantile(x)
x <- c(1,2,3)
y <- c(4,5,6)
list(x,y)
list(x,y,y)
x <- matrix(1:50, nrow = 10, ncol = 2)
x
x <- matrix(1:10, nrow = 2)
x
x <- matrix(1:10, nrow = 2, byrow = TRUE)
X
x
x <- matrix(1:10, nrow = 2, byrow = TRUE)
x
x <- matrix(1:50, nrow = 10, ncol = 2, byrow = TRUE)
X
x
array(1:10,dim = 2)
x <- 1:5
y <- 6:10
corr(x, y)
?corr
??corr
boot::corr(x, y)
//
install.packages(rJava)
install.packages("rJava")
?rJava
??rJava
library(help = "rJava")
help.search("rJava")
library()
detach("package:ggplot2", unload=TRUE)
install.packages("xlsxjars")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
Sys.getenv('JAVA_HOME')
Sys.getenv('LD_LIBRARY_PATH')
}
iris
data("iris")
iris
plot(iris)
q()
install.packages("rJava")
q()
install.packages("rJava")
install.packages("rJava")
q()
install.packages("rJava")
q()
install.packages("rJava")
library()
library(help = "rJava")
help.search(rJava)
help.search("rJava")
install.packages("xlsxjars")
install.packages("xlsx")
write.xlsx(x)
write.xlsx(x, 'teste')
library("xlsx")
x <- data.frame(Um = 1:10, Dois = 2:20)
x <- data.frame(Um = c(1:10), Dois = c(2:20))
x <- data.frame(c(1:10), c(2:20))
um <- 1:10
um
dois <- 2:20
x <- data.frame(Um = um, Dois = dois)
x <- data.frame(um, dois)
data.frame(um, dois)
dois <- seq(2, 20, 2)
dois
data.frame(um, dois)
x <- data.frame(Um = um, Dois = dois)
x
um <- 1:10
length(um) == length(dois)
if (length(um) == length(dois)) {
(data.frame(Um = um, Dois = dois))
}
q()
setwd("~/Documents/CienciaDosDados/unibratec/MateriaisDas3PrimeirasDisciplinas/Ferramentas em IA/atividades/workspace-r")
cardapio <- c("Entrada", "Principal", "Sobremesa")
(restaurante)
print(restaurante)
print(restaurante)
restaurante <- data.frame(Cardápio = cardapio, Preços = precos)
restaurante
str(precos)
restaurante <- data.frame(Cardápio = cardapio, Preços = precos)
restaurante
print(restaurante)
precos <- c("9.50", "23.00", "12.64")
print(restaurante)
dias <- c(3, 6, 8)
list(restaurante, dias)
list(cardapio, precos, dias)
data.frame(list(cardapio, precos, dias))
data.frame(list(C = cardapio, P = precos, D = dias))
restaurante <- data.frame(Cardápio = cardapio, Preço = precos)
# Atividade: criar um vetor Cardápio com as opções de um restaurante
# e outro com os preços. E a partir desses dois armazenar na variável
# Total uma estrutura de dados. Utilize o seguinte comando.
cardapio <- c("Entrada", "Principal", "Sobremesa")
precos <- c("9.50", "23.00", "12.64")
restaurante <- data.frame(Cardápio = cardapio, Preço = precos)
print(restaurante)
# Atividade: Aproveitando o exemplo anterior. Criar um vetor dias com
# as quantidades pedidas dos pratos em dois dias e em seguida
# concatenar usando a função list() com cardápio e preços.
data.frame(list(Cardápio = cardapio, Preço = precos, Dias = dias))
t(data.frame(list(Cardápio = cardapio, Preço = precos, Dias = dias)))
rbind(data.frame(list(Cardápio = cardapio, Preço = precos, Dias = dias)))
rbind(data.frame(list(Cardápio = cardapio, Preço = precos, Dias = dias)))
cbind(data.frame(list(Cardápio = cardapio, Preço = precos, Dias = dias)))
rbind(list(Cardápio = cardapio, Preço = precos, Dias = dias))
cbind(list(Cardápio = cardapio, Preço = precos, Dias = dias))
rbind(list(cardapio, precos, dias))
cbind(list(cardapio, precos, dias))
m <- cbind(1, 1:7)
m
m <- rbind(1, 1:7)
m
cbind(0, rbind(1, 1:3))
x <- read.table("tabela01.txt", header=T, sep="\t");
x
tb <- read.table("tabela01.txt", header=T, sep="\t");
if(is.data.frame(tb)) print(tb)
x <- read.table("tabela01.txt", header=T, sep="\t");
# Atividade: criar um vetor Cardápio com as opções de um restaurante
# e outro com os preços. E a partir desses dois armazenar na variável
# Total uma estrutura de dados. Utilize o seguinte comando.
cardapio <- c("Entrada", "Principal", "Sobremesa")
precos <- c("9.50", "23.00", "12.64")
restaurante <- data.frame(Cardápio = cardapio, Preço = precos)
print(restaurante)
# Atividade: Aproveitando o exemplo anterior. Criar um vetor dias com
# as quantidades pedidas dos pratos em dois dias e em seguida
# concatenar usando a função list() com cardápio e preços.
data.frame(list(Cardápio = cardapio, Preço = precos, Dias = dias))
# t(data.frame(list(Cardápio = cardapio, Preço = precos, Dias = dias)))
tb <- read.table("tabela01.txt", header=T, sep="\t");
if(is.data.frame(tb)) print(tb)
library(xlsx)
arquivo <- system.file("planilha01", "planilha01.xlsx", package = "xlsx")
resultado <- read.xlsx(arquivo, 1)
resultado <- read.xlsx("planilha01.xlsx", 1)
head(resultado)
head(resultado[, 1:6])
#
# Atividade: criar um vetor Cardápio com as opções de um restaurante
# e outro com os preços. E a partir desses dois armazenar na variável
# Total uma estrutura de dados. Utilize o seguinte comando.
#
cardapio <- c("Entrada", "Principal", "Sobremesa")
precos <- c("9.50", "23.00", "12.64")
restaurante <- data.frame(Cardápio = cardapio, Preço = precos)
print(restaurante)
#
# Atividade: Aproveitando o exemplo anterior. Criar um vetor dias com
# as quantidades pedidas dos pratos em dois dias e em seguida
# concatenar usando a função list() com cardápio e preços.
#
df <- data.frame(list(Cardápio = cardapio, Preço = precos, Dias = dias))
# t(data.frame(list(Cardápio = cardapio, Preço = precos, Dias = dias)))
# tb <- read.table("tabela01.txt", header=T, sep="\t");
# if(is.data.frame(tb)) print(tb)
#
# Atividade: Criar uma planilha e importar seus dados para o R.
#
library(xlsx)
resultado <- read.xlsx("planilha01.xlsx", 1)
head(resultado)
#
# Atividade: Exportar um data.frame do R, para criar uma planilha de
# dados
#
write.xlsx(df, "restaurante.xlsx")
install.packages("lattice")
getwd()
carros <- read.csv(file = "carros.csv")
head(carros)
carros <- read.csv(file = "carros.csv", header = TRUE, sep = ";")
carros
resultado
resultado[1]
resultado[1;2]
resultado[1,2]
resultado[1]
plogis(resultado[1], resultado[2])
resultado[2]
resultado[3]
plogis(resultado[2], resultado[3])
plot(resultado[2], resultado[3])
plot(resultado[2])
conts = read.csv('http://www.stat.berkeley.edu/classes/s133/data/conts.txt',na.string='.',stringsAsFactors=FALSE)
conts
a <- 1:10
b <- rep(2:20, 2)
b
b <- rep(2:20, 5)
b
seq(2:20, 2)
seq(2, 20, 2)
a
b <- seq(2, 20, 2)
b
plot(a, b)
jpeg("aXb.jpg")
plot(a, b)
dev.off()
b <- seq(2, 20, 2)
pdf("aXb.pdf")
plot(a, b)
dev.off()
as.Date.now
what
rdates = scan(what="")
rdates
example()
example("rep")
de
demo()
demo(rep())
demo(graphics)
sample(barplot())
example("table")
search()
library("rJava")
search()
v <- c("1.1", "2.4")
v
as.numeric(v)
v <- c(10.12, 22.42)
v
as.numeric(v)
precos
as.numeric(precos)
v <- 1:10
append(x, rep(2:20, 2))
append(v, rep(2:20, 2))
v
append(v, seq(2:20, 2))
seq(2, 20, 2)
append(v, seq(2, 20, 2))
append(v, seq(11, 20, 1))
is.na()
is.na(1)
is.na(0)
is.na(2)
is.na(2 > 2)
is.na(c(NA, 2)
)
values
= c(12,NA,19,15,12,17
,14,NA,19)
)
values <- c(12,NA,19,15,12,17,14,NA,19)
s)]
values[!is.na(values)]
is.na(values)
values[is.na(values)]
read.table(pipe("ps"),header=TRUE)
read.table(pipe("ls"),header=TRUE)
t <- 1.283838
t
round(t)
t <- 14.283838
round(t)
signif
signif(t)
signif(t)
x = c(3.0001,4.0009,5.002)
x
y = c(3,4,5)
y
identical(all.equal(x,y,tolerance=.001),TRUE)
#
# Comandos auxiliares (interessantes)
#
# - Get the current working directory:
# getwd()
#
# - Obtendo ajuda:
# example("rep")
# demo(graphics)
#
# - Obtendo dados do linux:
# read.table(pipe("ps"), header=TRUE)
# read.table(pipe("ls"), header=TRUE)
#
# Atividade: criar um vetor Cardápio com as opções de um restaurante
# e outro com os preços. E a partir desses dois armazenar na variável
# Total uma estrutura de dados. Utilize o seguinte comando.
#
cardapio = c("Entrada", "Principal", "Sobremesa")
precos <- c("9.50", "23.00", "12.64")
# as.numeric(precos)
restaurante <- data.frame(Cardápio = cardapio, Preço = precos)
print(restaurante)
#
# Atividade: Aproveitando o exemplo anterior. Criar um vetor dias com
# as quantidades pedidas dos pratos em dois dias e em seguida
# concatenar usando a função list() com cardápio e preços.
#
df <- data.frame(list(Cardápio = cardapio, Preço = precos, Dias = dias))
# t(data.frame(list(Cardápio = cardapio, Preço = precos, Dias = dias)))
# tb <- read.table("tabela01.txt", header=T, sep="\t");
# if(is.data.frame(tb)) print(tb)
#
# Atividade: Criar uma planilha e importar seus dados para o R.
#
library(xlsx)
resultado <- read.xlsx("planilha01.xlsx", 1)
head(resultado)
#
# Atividade: Exportar um data.frame do R, para criar uma planilha de
# dados
#
write.xlsx(df, "restaurante.xlsx")
# carros <- read.csv(file = "carros.csv", header = TRUE, sep = ";")
# head(carros)
# (https://www.stat.berkeley.edu/~s133/R-4a.html)
# Contains the information about the country by continents "conts"
# conts = read.csv('http://www.stat.berkeley.edu/classes/s133/data/conts.txt',na.string='.',stringsAsFactors=FALSE)
#
# Saving Plots in R
#
# a <- 1:10
# b <- seq(2, 20, 2)
# jpeg("aXb.jpg")
# plot(a, b)
# dev.off()
#
# dev.copy(png,'myplot.png')
# dev.off()
#
# pdf("aXb.pdf")
# plot(a, b)
# dev.off()
#
# x <- stats::rnorm(50)
# opar <- par(bg = "white")
# plot(x, ann = FALSE, type = "n")
# abline(h = 0, col = gray(.90))
# lines(x, col = "green4", lty = "dotted")
# points(x, bg = "limegreen", pch = 21)
# title(main = "Simple Use of Color In a Plot",
#       +       xlab = "Just a Whisper of a Label",
#       +       col.main = "blue", col.lab = gray(.8),
#       +       cex.main = 1.2, cex.lab = 1.0, font.main = 4, font.lab = 3)
# as.Date('1/15/2001',format='%m/%d/%Y')
# mydate = strptime('16/Oct/2005:07:51:00',format='%d/%b/%Y:%H:%M:%S')
# seq(as.Date('1976-7-4'),by='days',length=10)
# seq(as.Date('2000-6-1'),to=as.Date('2000-8-1'),by='2 weeks')
# rdates = scan(what="")
a
b
r = table(a, b)
a = 1:10
b = seq(2, 20, 2)
r = table(a, b)
r
ftable(a, b)
pipe('date')
pipe("date")
read.table(pipe("date"), header = TRUE)
read.table(pipe("date"), header = FALSE)
t =read.table(pipe("date"), header = FALSE)
t
t[,1]
t[1,]
as.array(t)
as.list(t)
as.list(t)[1]
list.files()
file.choose()
file.access()
file.access("*")
file.access("*.*")
file.access(pipe("ls"))
?pipe
cat
v
t
readline(t)
system.time()
system.time("d/m/y")
example("system.time()")
example(system)
Sys.time()
t
rbind(t)
cbind(t)
row(t)
col(t)
letters[10:15]
letters[1:5]
sample(20)
sample(letters[1:15])
options()
t
split(t)
?split
example(split)
split(1:10, 1:2)
lm()
example(lm)
par(mfrow=c(2,2))
curve(sin(x),from=-pi,to=pi,main="Si
ne")
curve(cos(x),from=-pi,to=pi,main="Co
sine")
curve(tan(x),from=-pi,to=pi,main="Ta
ngent"
)
curve(sin(x)^2/cos(x),from=-pi,to=pi
,main=
"Sin^2
/Cosi
ne")
data()
data("Titanic")
Titanic
plot(Titanic)
legend(1,2,"teste")
locator()
library(lattice)
?lattice
RShowDoc("NEWS", package = "lattice")
library(trellis)
library("trellis")
install.packages(trellis)
install.packages("trellis")
conts
table(conts$cont)
sum(conts$cont == "EU")
boxplot(conts$country, conts$cont, main = Country x cont)
boxplot(conts$country, conts$cont, main = CountryCont)
boxplot(conts$country, conts$cont, main = 'CountryCont')
boxplot(conts$X, conts$cont, main = 'CountryCont')
boxplot(conts$cont, main = 'CountryCont')
plot(conts)
plot(conts[, c(1,6)])
plot(conts[, -c(1,6)])
plot(conts[, -c(1,6)])
iris
tableiris
table(iris)
iris
length(iris)
nrow(iris)
ncol(iris)
iris[2]
eixo_x = iris[2]
head(iris)
eixo_x
head(iris)
eixo_y = iris[4]
head(eixo_x)
head(eixo_y)
plot(eixo_x, eixo_y, type="p", main="PLANTA IRIS", xlab = "Sepal Width", ylab = "Petal Width", col=“blue")
plot(eixo_x, eixo_y, type="p", main="PLANTA IRIS", xlab = "Sepal Width", ylab = "Petal Width", col = “blue")
plot(eixo_x, eixo_y, type="p", main="PLANTA IRIS", xlab = "Sepal Width", ylab = "Petal Width", colors("blue"))
plot(eixo_x, eixo_y, type="p", main="PLANTA IRIS", xlab = "Sepal Width", ylab = "Petal Width")
eixo_x
eixo_y
plot(eixo_x, eixo_y, type="p", main="PLANTA IRIS", xlab = "Sepal Width", ylab = "Petal Width")
plot(x=eixo_x,y=eixo_y, type="p", main="PLANTA IRIS", xlab = "Sepal Width", ylab = "Petal Width")
plot(x=eixo_x,y=eixo_y, type="p", main="PLANTA IRIS", xlab = "Sepal Width", ylab = "Petal Width")
plot(x=eixo_x, y=eixo_y, type="p", main="PLANTA IRIS", xlab = "Sepal Width", ylab = "Petal Width", col = “blue")
plot(x=eixo_x, y=eixo_y, type="p", main="PLANTA IRIS", xlab = "Sepal Width", ylab = "Petal Width", col = "blue")
plot(x=eixo_x, y=eixo_y, type="p", main="PLANTA IRIS", xlab = "Sepal Width", ylab = "Petal Width", col = "blue")
plot(x=eixo_x, y=eixo_y, type="p", xlim=c(1, 20), ylim=c(1, 20), main="PLANTA IRIS", xlab = "Sepal Width", ylab = "Petal Width", col = "blue")
sample(plot())
plot(eixo_x, eixo_y)
plot(eixo_x)
plot(eixo_y)
plot(eixo_y, type = "p")
plot(eixo_x, eixo_y, type = "p")
plot(eixo_x, eixo_y, type = "l")
eixo_x
a = 1:10
b = seq(2, 20 ,2)
plot(a, b, type = "p")
a
t(eixo_x)
as.vector(eixo_x)
as.vector(eixo_x, mode = "any")
is.table(eixo_x)
is.vector(eixo_x)
is.vector(a)
is.vector(b)
table(a)
is.data.frame(eixo_x)
is.data.frame(eixo_x)
unlist(eixo_x)
teste = eixo_x$Sepal.Width
teste
ey = eixo_y$Petal.Width
ey
eixo_x = iris[2]
eixo_y = iris[4]
# head(eixo_y)
# is.data.frame(eixo_y)
ex = eixo_x$Sepal.Width
ey = eixo_y$Petal.Width
plot(x=ex, y=ey, type="p", xlim=c(1, 20), ylim=c(1, 20), main="PLANTA IRIS", xlab = "Sepal Width", ylab = "Petal Width", col = "blue")
plot(x=ex, y=ey, type="p", xlim=c(1, 20), ylim=c(1, 20), main="PLANTA IRIS", xlab = "Sepal Width", ylab = "Petal Width", col = "blue")
q()
