<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>lab</groupId>
	<artifactId>cadastro</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<parent>
		<groupId>br.gov.frameworkdemoiselle</groupId>
		<artifactId>demoiselle-minimal-parent</artifactId>
		<version>2.5.1</version>
	</parent>

	<dependencyManagement>
        <dependencies>
        	<!-- Para https://demoisellelab.wordpress.com/m2c2/ -->
        	<!-- 
        		O artefato jboss-as-parent contém a definição de todas as bibliotecas que o servidor
        		JBoss oferece. Declarado na sessão dependencyManagement com o escopo import. Agora é 
        		possível declarar qualquer uma das suas dependências sem definir a versão. 
        		Exemplo: artefato hibernate-validator "<version>4.2.0.Final</version>".
        	 -->
            <dependency>
                <groupId>org.jboss.as</groupId>
                <artifactId>jboss-as-parent</artifactId>
                <version>7.1.1.Final</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    
	<dependencies>
<!-- 		<dependency> -->
<!-- 			<groupId>br.gov.frameworkdemoiselle.component</groupId> -->
<!-- 			<artifactId>demoiselle-junit</artifactId> -->
<!-- 			<version>2.3.1</version> -->
<!-- 			<scope>test</scope> -->
<!-- 		</dependency> -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- Para https://demoisellelab.wordpress.com/m2c2/ -->
		<dependency>
            <groupId>br.gov.frameworkdemoiselle</groupId>
            <artifactId>demoiselle-rest</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
        	<!--  Possui todas as classes de validação da especificação Bean Validation
        	(sem a necessidade de definir a sua versão) -->
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
        	<!-- Dependencia para JPA -->
            <groupId>br.gov.frameworkdemoiselle</groupId>
            <artifactId>demoiselle-jpa</artifactId>
            <version>2.5.1</version>
            <scope>compile</scope>
        </dependency>
        
        <!-- Tests dependencies -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.3.4</version><!--$NO-MVN-MAN-VER$-->
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpcore</artifactId>
			<version>4.3.2</version>
			<scope>test</scope>
		</dependency>
        
        <!-- Jackson dependencies -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.9</version>
			<scope>provided</scope>
		</dependency>
        
	</dependencies>

	<build>
		<plugins>
			<!-- Tirando o erro: "web.xml is missing and <failOnMissingWebXml> is set to true" -->
			<!-- 
				This is a maven error. It says that it is expecting a web.xml file in your project 
				because it is a web application, as indicated by <packaging>war</packaging>. However, 
				for recent web applications a web.xml file is totally optional. Maven needs to catch 
				up to this convention.
			 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
		</plugins>
		
		<!-- Para gerar a build na pasta target 
		sem o número da versão (cadastro-0.0.1-SNAPSHOT.war) -->
		<finalName>${project.artifactId}</finalName>
		
	</build>
 	
</project>