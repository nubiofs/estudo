
https://github.com/boundlessgeo/qgis-geoserver-plugin

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
/////////// (kartoza/geoserver)
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

//https://hub.docker.com/r/kartoza/geoserver
https://github.com/kartoza/docker-geoserver

* Configuração:

$ git clone https://github.com/kartoza/docker-geoserver

$ mv docker-geoserver docker-geoserver_kartoza

$ cd docker-geoserver_kartoza

--> Alterar em "Dockerfile": 

	ARG IMAGE_VERSION=9-jre11
	ARG GS_VERSION=2.15.1

	ARG WAR_URL=http://sourceforge.net/projects/geoserver/files/GeoServer/${GS_VERSION}/geoserver-${GS_VERSION}-war.zip

	&& ln -s /usr/lib/jvm/java-11-openjdk-amd64 /usr/lib/jvm/default-java \

$ docker build -t kartoza/geoserver .
#$ docker build --build-arg INITIAL_MEMORY=2GB -t kartoza/geoserver .

$ docker images
REPOSITORY             TAG                 IMAGE ID            CREATED              SIZE
kartoza/geoserver      latest              10cfda4cb31f        About a minute ago   681MB

** Execução:

$ cd ../ && mkdir workspace && cd workspace

$ docker run --rm -d -p 8080:8080 -v ${PWD}:/opt/geoserver/data_dir --name=gs_kartoza kartoza/geoserver
#$ docker run --name "geoserver"  -e GEOSERVER_ADMIN_PASSWORD='myawesomegeoserver' -p 8080:8080 -d -t kartoza/geoserver
#$ docker run -d -v ${PWD}:/opt/geoserver/data_dir kartoza/geoserver

LogonGeoserver: admin geoserver

//tomcat:
==> localhost:8080 

==> localhost:8080/geoserver
==> http://localhost:8080/geoserver/web/

obs.:
	$ docker ps
	$ docker exec -it -u 0 13388846d193 /bin/bash


Obs.:

(Configuração Global)
Habilitar serviços globais: OK

(Lista de reglas de acceso a los servicios)

Serviço: wms
Método: *
Roloes: *


\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
/////////// (oscarfonts/geoserver)
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

//https://hub.docker.com/r/oscarfonts/geoserver
//https://github.com/oscarfonts/docker-geoserver/blob/master/aws/README.md

* Configuração:

$ git clone https://github.com/oscarfonts/docker-geoserver/

$ mv docker-geoserver/ docker-geoserver_oscarfonts

$ cd docker-geoserver_oscarfonts/2.15.1/

--> Colocar em "docker-geoserver_oscarfonts/2.15.1/Dockerfile": 
	
...
	ENV LANG en_US.utf8
...
	# GeoServer
	&& mv -f data/ ${GEOSERVER_DATA_DIR} \
...
	# Tomcat environment
	ENV CATALINA_OPTS "-server -Djava.awt.headless=true \
		-Xms768m -Xmx1560m -XX:+UseConcMarkSweepGC -XX:NewSize=48m \
		-Duser.language=en -Duser.region=US -Dfile.encoding=UTF-8 \
		-Djavax.servlet.request.encoding=UTF-8 \
		-DGEOSERVER_DATA_DIR=${GEOSERVER_DATA_DIR}"

$ docker build -t oscarfonts/geoserver .

...

Archive:  geoserver.war
   creating: META-INF/
  inflating: META-INF/MANIFEST.MF    
   creating: data/
   creating: data/layergroups/
   creating: data/www/

   creating: data/demo/
   creating: data/user_projections/
   creating: data/data/
   creating: data/data/shapefiles/
   creating: data/data/taz_shapes/
   creating: data/data/sf/
   creating: data/data/nyc/
   creating: data/plugIns/
   creating: data/workspaces/

 inflating: index.html              
  inflating: data/global.xml         
  inflating: data/layergroups/spearfish.xml  

  inflating: data/www/openlayers/readme.txt  
  inflating: data/www/openlayers/ol-demo.cfg  
  inflating: data/www/openlayers/OpenLayers.js  
  inflating: data/www/ol-demo.html  

 inflating: data/demo/WFS_mathGetFeature.xml  
  inflating: data/demo/WFS_getFeatureFidFilter.url  
  inflating: data/user_projections/epsg.properties  
  inflating: data/wms.xml            
  inflating: data/data/shapefiles/states.shx  
  inflating: data/data/shapefiles/states.prj  
  inflating: data/data/shapefiles/states.shp  
  inflating: data/data/shapefiles/states.dbf  
  inflating: data/data/taz_shapes/tasmania_cities.prj  
  inflating: data/data/taz_shapes/tasmania_roads.dbf  
  inflating: data/data/taz_shapes/tasmania_roads.shp  

...

extracting: WEB-INF/lib/gt-tile-client-21.1.jar  
  inflating: WEB-INF/dispatcher-servlet.xml  
  inflating: WEB-INF/web.xml         
   creating: META-INF/maven/
   creating: META-INF/maven/org.geoserver.web/
   creating: META-INF/maven/org.geoserver.web/gs-web-app/
  inflating: META-INF/maven/org.geoserver.web/gs-web-app/pom.xml  
  inflating: META-INF/maven/org.geoserver.web/gs-web-app/pom.properties 

...


/docker-geoserver_oscarfonts/2.15.1$ docker images
REPOSITORY             TAG                 IMAGE ID            CREATED             SIZE
oscarfonts/geoserver   latest              8bd57108fa85        18 seconds ago      618MB

* Execução:

$ cd ../../ && mkdir workspace && cd workspace

$ docker run --rm -d -p 8080:8080 -v ${PWD}:/var/local/geoserver --name=gs oscarfonts/geoserver

LogonGeoserver: admin geoserver

//tomcat:
==> localhost:8080 

==> localhost:8080/geoserver
==> http://localhost:8080/geoserver/web/

obs.:
	$ docker ps
	$ docker exec -it -u 0 13388846d193 /bin/bash

Diretorio de dados 	/var/local/geoserver

		root@07653e0c1620:/usr/local/tomcat# cd bin
		root@ad5864fa5ecb:/usr/local/tomcat/bin# ./shutdown.sh 

			shutdown
			This runs catalina stop and shuts down Tomcat.

			startup
			This runs catalina start and starts up Tomcat.

		root@ad5864fa5ecb:/usr/local/tomcat/bin# ./catalina.sh stop

		root@ad5864fa5ecb:/usr/local/tomcat/bin# ./catalina.sh start
		
		root@ad5864fa5ecb:/usr/local/tomcat/bin# env | grep CATALINA_OPTS

		root@ad5864fa5ecb:/usr/local/tomcat/bin# cd ../../geoserver && pwd


-Dfile.encoding=UTF8 -Duser.timezone=GMT -Djavax.servlet.request.encoding=UTF-8

||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
/////////// (wildsong/geoserver)
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

https://github.com/Wildsong/docker-geoserver
https://hub.docker.com/r/wildsong/geoserver

https://github.com/Wildsong/geoserver-compose

$ git clone https://github.com/Wildsong/docker-geoserver

$ mv docker-geoserver/ docker-geoserver_wildsong && cd docker-geoserver_wildsong

--> Alterar "Dockerfile":

	RUN mkdir /tmp/gs && cd /tmp/gs && wget http://sourceforge.net/projects/geoserver/files/GeoServer/${GEOSERVER_VERSION}/geoserver-${GEOSERVER_VERSION}-war.zip

	RUN mkdir /tmp/wc && cd /tmp/wc && wget http://sourceforge.net/projects/geowebcache/files/geowebcache/${GEOWEBCACHE_VERSION}/geowebcache-${GEOWEBCACHE_VERSION}-war.zip

	WORKDIR ${CATALINA_HOME}/webapps

	RUN cd /tmp/gs && unzip -o geoserver-${GEOSERVER_VERSION}-war.zip \
		&& cd /tmp/wc && unzip -o geowebcache-${GEOWEBCACHE_VERSION}-war.zip

	# These folders have to exist for the deployment to be happy.
	RUN mkdir ${GEOSERVER_DATA_DIR} && mkdir ${GEOWEBCACHE_DATA_DIR} \
		&& mv /tmp/gs/geoserver.war ${GEOSERVER_DATA_DIR} \
		&& mv /tmp/wc/geowebcache.war ${GEOWEBCACHE_DATA_DIR} \
		&& cd ${GEOSERVER_DATA_DIR} && unzip geoserver.war \
		&& cd ${GEOWEBCACHE_DATA_DIR} && unzip geowebcache.war

$ docker build -t geoserver .

$ docker run --rm -d -p 8080:8080 -v ${PWD}:/geoserver --name=gs_wildsong geoserver
#docker run -it --name geoserver_build -v geoserver_data:/geoserver geoserver

LogonGeoserver: admin geoserver


CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCc
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

https://github.com/jbilander/HowTos/wiki/How-to-setup-Tomcat-9-on-Java-OpenJDK-11-and-Apache-proxy_ajp-on-Ubuntu-18.04-LTS

root@zeus:/opt/tomcat# vi conf/tomcat-users.xml

	Put the following inside the tomcat-users tag, replace with your prefered username and password

	<role rolename="manager-gui"/>
	<user username="tomcat" password="s3cret" roles="manager-gui"/>

Start Tomcat:

root@zeus:/opt/tomcat# systemctl start tomcat

root@zeus:/opt/tomcat# systemctl --no-pager status tomcat

==> http://localhost:8080/manager

ProxyPass "/manager" "ajp://127.0.0.1:8009/manager"


