https://www.mongodb.com/transactions
https://mongodb.github.io/mongo-java-driver-reactivestreams/

https://spring.io/blog/2018/06/28/hands-on-mongodb-4-0-transactions-with-spring-data
https://www.percona.com/blog/2018/06/25/mongodb-transactions-your-very-first-transaction-with-mongodb-4-0/

https://docs.mongodb.com/manual/core/transactions/#transactions-and-mongodb-drivers


xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

	//TESTE+
	@Component
	static class ExtratoRTDFalhaViolacaoEventsListener {

		@EventListener
		public void onMulticast(List<? extends ExtratoRTDFalhaViolacao> extratos) {
			log.info("Received extratos [size={}] on multicast: {}", extratos.size(), extratos.get(0).getExtratoRTD().getLoteRTDId());
		}

		@TransactionalEventListener(phase = TransactionPhase.BEFORE_COMMIT)
		public void beforeCommit(List<? extends ExtratoRTDFalhaViolacao> extratos) {
			log.info("Received extratos [size={}] before commit: {}", extratos.size(), extratos.get(0).getExtratoRTD().getLoteRTDId());
		}

		@TransactionalEventListener
		public void afterCommit(List<? extends ExtratoRTDFalhaViolacao> extratos) {
			log.info("Received extratos [size={}] after commit: {}", extratos.size(), extratos.get(0).getExtratoRTD().getLoteRTDId());
		}

		@TransactionalEventListener(phase = TransactionPhase.AFTER_ROLLBACK)
		public void afterRollback(List<? extends ExtratoRTDFalhaViolacao> extratos) {
			log.info("Received extratos [size={}] afterRollback: {}", extratos.size(), extratos.get(0).getExtratoRTD().getLoteRTDId());
		}

		@TransactionalEventListener(phase = TransactionPhase.AFTER_COMPLETION)
		public void afterCompletion(List<? extends ExtratoRTDFalhaViolacao> extratos) {
			log.info("Received extratos [size={}] after completion: {}", extratos.size(), extratos.get(0).getExtratoRTD().getLoteRTDId());
		}

	}

	//TESTE-

