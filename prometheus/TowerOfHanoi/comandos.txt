********************
** JAVA APLICAÇÃO **
********************

//https://start.spring.io/
$ cd ~/github/estudo/prometheus/TowerOfHanoi

$ mvn clean install

$ java -javaagent:./src/main/resources/jmx_prometheus_javaagent-0.12.0.jar=8080:./src/main/resources/config.yaml -jar ./target/TowerOfHanoi-0.0.1-SNAPSHOT.jar

-> Metrics will now be accessible at http://localhost:8080/metrics

obs.:
	$ jconsole

	--> MBeans -> java.lang -> OperationSystem -> Attributes -> SystemCpuLoad

****************
** PROMETHEUS **
****************

1) Via docker:

//https://github.com/prometheus/prometheus/blob/master/Dockerfile
//https://hub.docker.com/r/prom/prometheus/
//$ docker run --name prometheus -d -p 127.0.0.1:9090:9090 prom/prometheus
//

$ cd ~/github/estudo/prometheus/TowerOfHanoi

	obs.: (prometheus.yml)

	  static_configs:
	  - targets: ['localhost:9090', 'localhost:8080']

	ou

	  - targets:
	    - localhost:9090
	    - localhost:8080

$ 
docker run --rm --name prometheus --network="host" -h 127.0.0.1 -d -p 127.0.0.1:9090:9090 -p 127.0.0.1:8080:8080 -v ${PWD}/src/main/resources/prometheus.yml:/etc/prometheus/prometheus.yml prom/prometheus

-> Prometheus will now be reachable at http://localhost:9090/

--> http://localhost:9090/targets
--> http://localhost:9090/consoles/prometheus-overview.html?instance=localhost%3a8080

--> http://localhost:9090/graph
---> java_lang_OperatingSystem_ProcessCpuLoad{instance="localhost:8080",job="prometheus"}

//$ docker ps
//$ docker exec -it -u 0 fd0708a13504 /bin/bash


java_lang_OperatingSystem_ProcessCpuLoad{instance="localhost:8080",job="prometheus"}


2) Via download:

//
//https://github.com/prometheus/prometheus

https://github.com/prometheus/prometheus/releases/download/v2.12.0-rc.0/prometheus-2.12.0-rc.0.linux-amd64.tar.gz

/prometheus-2.12.0-rc.0.linux-amd64$ ./prometheus

obs.: (prometheus.yml)

    static_configs:
    - targets: ['localhost:9090', 'localhost:8080']

*************
** GRAFANA **
*************

==> IMPORTANTE (ABRIR O GRAFANA NO GOOGLE-CHROME)!!!

1) Via docker:

//https://grafana.com/docs/installation/docker/
//https://hub.docker.com/r/grafana/grafana/

$ docker run --rm --name grafana --network="host" -h 127.0.0.1 -d -p 3000:3000 grafana/grafana

//$ docker run --rm --name grafana -d -p 3000:3000 grafana/grafana:6.1.3

//
docker run --rm -d -p 3000:3000 \
--name=grafana \
grafana:latest-with-plugins

//
docker run \
  -d \
  -p 3000:3000 \
  --name=grafana \
  -e "GF_SERVER_ROOT_URL=http://grafana.server.name" \
  -e "GF_SECURITY_ADMIN_PASSWORD=secret" \
  grafana/grafana

//
docker run \
  -d \
  -p 3000:3000 \
  --name=grafana \
  -e "GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource" \
  grafana/grafana

i)
--> http://localhost:3000. Login with the default credentials (username ‘admin’ and password ‘admin’) 

ii)
 Click “Add Data Source”, select Prometheus 9090


obs.:

dashboard --> Settings -> Variables:
 General (Type = 'Query'; Label = 'HOST:')
 Query Options (Data Source = 'Prometheus'; Query = 'label_values(prometheus_build_info, instance)')
 
"JSON Model":

	 "targets": [
		{
		  "expr": "(time() - process_start_time_seconds{job=\"prometheus\", instance=~\"$node\"})",
		  "intervalFactor": 2,
		  "refId": "A"
		}
	      ],


2) Via download:

https://dl.grafana.com/oss/release/grafana-6.3.3.linux-amd64.tar.gz

/grafana-6.3.3.linux-amd64/grafana-6.3.3/bin$ ./grafana-server

---

JMX Exporter
(https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.12.0/jmx_prometheus_javaagent-0.12.0.jar)
(https://github.com/prometheus/jmx_exporter/tree/master/example_configs)

