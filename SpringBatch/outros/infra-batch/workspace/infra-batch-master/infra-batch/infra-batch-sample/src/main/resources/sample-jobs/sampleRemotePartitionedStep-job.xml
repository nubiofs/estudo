<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-3.0.xsd">

	<!-- Exemplo de Job que tem o processamento do step de forma distribuída 
		(Reader, Process e Writer são executados de forma distribuída). Para iniciar 
		uma máquina escrava é necessário passar o parâmetro -Dinfra.slave=true -->

	<beans:import
		resource="classpath:/spring/context/infra/batch/infra-batch-context.xml" />

	<!-- Importar o remote-partition-context para permitir o processamento distribuído de um step.
	Necessário definir o JMSPartitionStep indicando o step que será distribuído e 
	o partitioner utilizado para distribuição -->
	
	<beans:import
		resource="classpath:/spring/context/infra/batch/remote-partitioning-context.xml" />

	<!-- É Necessário importar um contexto que possua uma jmsConnectionFactory para acessar as filas.
		Lembrar de adicionar nas dependências do projeto, as libs necessárias para o client do provedor de JMS.
		(ex: jms-hornetq-context ou jms-activemq-context, etc) -->
	
	<beans:import
		resource="classpath:/spring/context/infra/batch/jms-hornetq-context.xml" />
		
	<beans:beans profile="master">

		<batch:job id="sampleRemotePartitionedStepJob" parent="infraParentJob">
			<batch:step id="step1.master" parent="customJMSPartitionStep"/>
		</batch:job>

		<beans:bean name="customJMSPartitionStep"
			class="br.gov.serpro.supde.infra.batch.core.concurrent.JMSPartitionStep"
			abstract="true">
			<beans:property name="partitioner" ref="partitioner" />
			<beans:property name="step" ref="remotePartitionStep" />
		</beans:bean>

		<beans:bean id="partitioner"
			class="br.gov.serpro.supde.infra.batch.core.concurrent.JdbcColumnRangePartitioner">
			<beans:property name="jdbcTemplate" ref="jdbcTemplate" />
			<beans:property name="table" value="experience" />
			<beans:property name="column" value="id" />
		</beans:bean>

	</beans:beans>

	<beans:beans profile="slave">

		<batch:step id="remotePartitionStep" parent="infraParentChunkedStep">
			<batch:tasklet>
				<batch:chunk reader="sampleJDBCPartitionItemReader"
					processor="sampleProcessor" writer="sampleWriter" commit-interval="3">
				</batch:chunk>
			</batch:tasklet>
		</batch:step>

		<beans:bean id="sampleJDBCPartitionItemReader"
			class="org.springframework.batch.item.database.JdbcPagingItemReader"
			scope="step">
			<beans:property name="dataSource" ref="dataSource" />
			<beans:property name="queryProvider">
				<beans:bean
					class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean">
					<beans:property name="dataSource" ref="dataSource" />
					<beans:property name="selectClause"
						value="SELECT id, name, country, birthdate, company, depto, extra" />
					<beans:property name="fromClause" value="FROM experience" />
					<beans:property name="whereClause"
						value="WHERE id &gt;= :fromId AND id &lt;= :toId" />
					<beans:property name="sortKey" value="ID" />
				</beans:bean>
			</beans:property>
			<beans:property name="parameterValues">
				<beans:map>
					<beans:entry key="fromId" value="#{stepExecutionContext[minValue]}" />
					<beans:entry key="toId" value="#{stepExecutionContext[maxValue]}" />
				</beans:map>
			</beans:property>
			<beans:property name="pageSize" value="4" />
			<beans:property name="rowMapper">
				<beans:bean
					class="br.gov.serpro.supde.infra.batch.sample.domain.ExperienceRowMapper" />
			</beans:property>
		</beans:bean>

		<beans:bean id="sampleProcessor"
			class="br.gov.serpro.supde.infra.batch.sample.SampleProcessor" />

		<beans:bean id="sampleWriter"
			class="br.gov.serpro.supde.infra.batch.sample.SampleWriter" />

	</beans:beans>

</beans:beans>