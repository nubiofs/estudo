<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-3.0.xsd">

	<!-- Exemplo de um Job que quebra um arquivo CSV em vÃ¡rias partes para fazer uso do processamento paralelo do Job -->

	<beans:import
		resource="classpath:/spring/context/infra/batch/infra-batch-context.xml" />

	<batch:job id="sampleCSVPartitionJob" parent="infraParentJob">
		<batch:step id="splitFileStep" next="partitionerStep">
			<batch:tasklet ref="splitFile" />
		</batch:step>
		<batch:step id="partitionerStep" parent="infraParentStep">
			<batch:partition step="readWriteStep" partitioner="partitioner">
				<batch:handler grid-size="#{infraJobContext.threads}" task-executor="concurrentTaskExecutor" />
			</batch:partition>
		</batch:step>
	</batch:job>

	<beans:bean id="splitFile"
		class="org.springframework.batch.core.step.tasklet.SystemCommandTasklet">
		<beans:property name="command"
			value="split -l 200 experience.csv experience_" />
		<beans:property name="timeout" value="10000" />
		<beans:property name="workingDirectory" value="#{infraJobContext.inputPath}" />
	</beans:bean>

	<beans:bean id="partitioner" scope="step"
		class="org.springframework.batch.core.partition.support.MultiResourcePartitioner">
		<beans:property name="keyName" value="fileName" />
		<beans:property name="resources"
			value="file:#{infraJobContext.inputPath}/experience_*" />
	</beans:bean>

	<batch:step id="readWriteStep" parent="infraParentChunkedStep">
		<batch:tasklet>
			<batch:chunk reader="sampleCSVItemReader" processor="sampleProcessor"
				writer="sampleWriter" commit-interval="100">
			</batch:chunk>
		</batch:tasklet>
	</batch:step>

	<beans:bean name="experienceLineMapper"
		class="br.gov.serpro.supde.infra.batch.core.support.CSVLineMapper">
		<beans:property name="fieldSetMapper">
			<beans:bean
				class="br.gov.serpro.supde.infra.batch.sample.domain.ExperienceFieldSetMapper" />
		</beans:property>
	</beans:bean>

	<beans:bean name="sampleCSVItemReader"
		class="br.gov.serpro.supde.infra.batch.core.support.CSVFileItemReader"
		scope="step">
		<beans:property name="lineMapper" ref="experienceLineMapper" />
		<beans:property name="resource"
			value="#{stepExecutionContext[fileName]}" />
	</beans:bean>

	<beans:bean id="sampleProcessor"
		class="br.gov.serpro.supde.infra.batch.sample.SampleProcessor" />

	<beans:bean id="sampleWriter"
		class="br.gov.serpro.supde.infra.batch.sample.SampleWriter" />

</beans:beans>