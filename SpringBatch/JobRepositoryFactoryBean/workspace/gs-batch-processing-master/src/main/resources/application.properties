# - (Referencia):
#
# https://hub.docker.com/_/postgres/
#
# - (Execução do Serviço):
#
# $ docker run --name some-postgres -e POSTGRES_PASSWORD=postgres -d postgres
#
# - (Criação do metadados):
#
# $ docker run -it --rm --link some-postgres:postgres postgres psql -h postgres -U postgres
#
# postgres=# CREATE USER test; ALTER USER test WITH PASSWORD 'passwd'; CREATE DATABASE testdb; GRANT ALL PRIVILEGES ON DATABASE testdb TO test;
#
# postgres=# CREATE TABLE public.people (id Bigserial PRIMARY KEY NOT NULL, first_name VARCHAR(20), last_name VARCHAR(20)); ALTER TABLE "public"."people" OWNER TO test;
#
# postgres=# \l \d \d people
#
# - (Obtendos dados conexão):
#
# $ docker container inspect 24ebe8a34b89
#
# .. "IPAddress": "172.17.0.2"
#
# - (Consultas aos dados):
#
# $ docker run -it --rm --link some-postgres:postgres postgres psql -h postgres -U test testdb
#
# testdb=# select * from people;
#
# testdb=> \d
#                    List of relations
# Schema |             Name             |   Type   | Owner 
#--------+------------------------------+----------+-------
# public | batch_job_execution          | table    | test
# public | batch_job_execution_context  | table    | test
# public | batch_job_execution_params   | table    | test
# public | batch_job_execution_seq      | sequence | test
# public | batch_job_instance           | table    | test
# public | batch_job_seq                | sequence | test
# public | batch_step_execution         | table    | test
# public | batch_step_execution_context | table    | test
# public | batch_step_execution_seq     | sequence | test
# public | people                       | table    | test
# public | people_id_seq                | sequence | test
#(11 rows)
#
# testdb=> select job_execution_id, start_time, status from batch_job_execution;
# testdb=> select job_instance_id, job_name from batch_job_instance;	
# testdb=> select * from batch_job_execution_params;
#
## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url=jdbc:postgresql://172.17.0.2:5432/testdb
spring.datasource.username=test
spring.datasource.password=passwd
spring.datasource.driver-class-name=org.postgresql.Driver

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto=create-drop

spring.batch.initialize-schema=always