(https://www.edureka.co/blog/big-data-tutorial?utm_source=blog&utm_medium=left-menu&utm_campaign=hadoop-tutorial)

* Story of Big Data

In ancient days, people used to travel from one village to another village on a horse driven cart, but as the time passed, villages became towns and people spread out. The distance to travel from one town to the other town also increased. 

1) Ter outro cavalo de reserva (para substituir o anterior)?
2) Ter varios cavalos para levar a mesma carga?

Big Data says, till today, we were okay with storing the data into our servers because the volume of the data was pretty limited, and the amount of time to process this data was also okay.  But now in this current technological world, the data is growing too fast and people are relying on the data a lot of times. Also the speed at which the data is growing, it is becoming impossible to store the data into any server.

+ (Problema do hotel)

+ (Gráfico: Aumento Dados vs Poder Computacional)

+ (Timeline evolução BigData com Google "BigTable x MapReduce x GFS")

+ (Google Trends)

* Big Data Driving Factors

The quantity of data on planet earth is growing exponentially for many reasons.

The major sources of Big Data are social media sites, sensor networks, digital images/videos, cell phones, purchase transaction records, web logs, medical records, archives, military surveillance, eCommerce, complex scientific research and so on.

By 2020, the data volumes will be around 40 Zettabytes which is equivalent to adding every single grain of sand on the planet multiplied by seventy-five.

+ (outros exemplos práticos do volume de dados?)

90 % of the world’s data has been created in last two years.

* What is Big Data?

Big Data is a term used for a collection of data sets that are large and complex, which is difficult to store and process using available database management tools or traditional data processing applications. The challenge includes capturing, curating, storing, searching, sharing, transferring, analyzing and visualization of this data.

+ (Definição Gartner)

* Big Data Characteristics

The five characteristics that define Big Data are: Volume, Velocity, Variety, Veracity and Value.

VOLUME: Volume refers to the ‘amount of data’, which is growing day by day at a very fast pace. The size of data generated by humans, machines and their interactions on social media itself is massive.

+ (Internet das Coisas "poder para nossa infra-estrutura total poder nos falar/comunicar")

VELOCITY: If you are able to handle the velocity, you will be able to generate insights and take decisions based on real-time data.

+ (batch vs Stream)

VARIETY: As there are many sources which are contributing to Big Data, the type of data they are generating is different. It can be structured, semi-structured or unstructured. Earlier, we used to get the data from excel and databases, now the data are coming in the form of images, audios, videos, sensor data etc.

-> Structured: The data that can be stored and processed in a fixed format is called as Structured Data. Data stored in a relational database management system (RDBMS) is one example of  ‘structured’ data. It is easy to process structured data as it has a fixed schema.

-> Semi-Structured: Semi-Structured Data is a type of data which does not have a formal structure of a data model, i.e. a table definition in a relational DBMS, but nevertheless it has some organizational properties like tags and other markers to separate semantic elements that makes it easier to analyze. XML files or JSON documents are examples of semi-structured data.

-> Unstructured: The data which have unknown form and cannot be stored in RDBMS and cannot be analyzed unless it is transformed into a structured format is called as unstructured data. Text Files and multimedia contents like images, audios, videos are example of unstructured data. The unstructured data is growing quicker than others, experts say that 80 percent of the data in an organization are unstructured. 

* Examples of Big Data

    Walmart handles more than 1 million customer transactions every hour.
    Facebook stores, accesses, and analyzes 30+ Petabytes of user generated data.
    230+ millions of tweets are created every day.
    More than 5 billion people are calling, texting, tweeting and browsing on mobile phones worldwide.
    YouTube users upload 48 hours of new video every minute of the day.
    Amazon handles 15 million customer click stream user data per day to recommend products.
    294 billion emails are sent every day. Services analyses this data to find the spams.
    Modern cars have close to 100 sensors which monitors fuel level, tire pressure etc. , each vehicle generates a lot of sensor data.

* Applications of Big Data

benefited by Big Data applications. Almost all the industries today are leveraging Big Data applications in one or the other way.

    Smarter Healthcare: Making use of the petabytes of patient’s data, the organization can extract meaningful information and then build applications that can predict the patient’s deteriorating condition in advance.

    Telecom: Telecom sectors collects information, analyzes it and provide solutions to different problems. By using Big Data applications, telecom companies have been able to significantly reduce data packet loss, which occurs when networks are overloaded, and thus, providing a seamless connection to their customers.

    Retail: Retail has some of the tightest margins, and is one of the greatest beneficiaries of big data. The beauty of using big data in retail is to understand consumer behavior. Amazon’s recommendation engine provides suggestion based on the browsing history of the consumer.

    Traffic control: Traffic congestion is a major challenge for many cities globally. Effective use of data and sensors will be key to managing traffic better as cities become increasingly densely populated.

    Manufacturing: Analyzing big data in the manufacturing industry can reduce component defects, improve product quality, increase efficiency, and save time and money.

    Search Quality: Every time we are extracting information from google, we are simultaneously generating data for it. Google stores this data and uses it to improve its search quality.


* Hadoop to the Rescue

Hadoop is an open source, Java-based programming framework that supports the storage and processing of extremely large data sets in a distributed computing environment.

Hadoop with its distributed processing, handles large volumes of structured and unstructured data more efficiently than the traditional enterprise data warehouse. Hadoop makes it possible to run applications on systems with thousands of commodity hardware nodes, and to handle thousands of terabytes of data.


xxxxxxxxxxxxxxxxxxxxxxxxx

(https://www.edureka.co/blog/what-is-hadoop?utm_source=blog&utm_medium=left-menu&utm_campaign=what-is-hadoop)

* Problems with Traditional Approach

The RDBMS focuses mostly on structured data like banking transaction, operational data etc. and Hadoop specializes in semi-structured, unstructured data like text, videos, audios, Facebook posts, logs, etc. RDBMS technology is a proven, highly consistent, matured systems supported by many companies. While on the other hand, Hadoop system technology is developed and is in demand due to Big Data, which mostly consists of unstructured data in different formats.

- So, the first problem is storing the colossal amount of data. Storing this huge data in a traditional system is not possible. The reason is obvious the storage will be limited to one system and the data is increasing in tremendous rate.

- Second problem is storing heterogeneous data. Now we know storing is a problem, but let me tell you it is just one part of the problem. Since we discussed that the data is not only huge, but it is present in various formats as well like: Unstructured, Semi-structured and Structured. So, you need to make sure that you have a system to store these varieties of data, generated from various sources.

- Now, let’s focus on third problem, which is accessing and processing speed. The hard disk capacity is increasing but disk transfer speed or the access speed is not increasing at similar rate. Let me explain you this with an example: If you have only one 100mbps I/O channel and you are processing say 1TB of data, it will take around 2.91 hours. Now, if you have four machines with four I/O channel for the same amount of data, then it will take 43 minutes approx. Thus for me, accessing and processing speed is the bigger problem than storage of Big Data.

+ (colocar figuras de exemplos de acesso ao disco)

* Evolution of Hadoop

Oct 2003 – Google releases papers with GFS (Google File System). In Dec 2004, Google releases papers with MapReduce. In 2005, Nutch used GFS and MapReduce to perform operations. In 2006, Yahoo created Hadoop based on GFS and MapReduce with Doug Cutting and team. You would be surprised if I would tell you that, in 2007 Yahoo started using Hadoop on a 1000 node cluster.

See the History how it was lead to the way it look like.

    2003 – Google launches project Nutch to handle billions of searches and indexing millions of web pages.
    Oct 2003 – Google releases papers with GFS (Google File System)
    Dec 2004 – Google releases papers with MapReduce
    2005 – Nutch used GFS and MapReduce to perform operations
    2006 – Yahoo! created Hadoop based on GFS and MapReduce (with Doug Cutting and team)
    2007 – Yahoo started using Hadoop on a 1000 node cluster
    Jan 2008 – Apache took over Hadoop
    Jul 2008 – Tested a 4000 node cluster with Hadoop successfully
    2009 – Hadoop successfully sorted a petabyte of data in less than 17 hours to handle billions of searches and indexing millions of web pages.
    Dec 2011 – Hadoop releases version 1.0
    Aug 2013 – Version 2.0.6 is available

First Google faced the problem of bigdata and researched and released the white-papers of  Google GFS(google file system) and MapReduce.

Later inspired by GFS and Mapreduce papers Doug Cutting and team lead to a open source Framework “HADOOP” by yahoo.

Now Facebook, Linkedin, ebay, Hortonworks, Cloudera etc have contributed to the Hadoop project.

* What is Hadoop?

Hadoop is a framework that allows you to first store Big Data in a distributed environment so that you can process it parallely. There are basically two components in Hadoop:

The first one is HDFS for storage (Hadoop distributed File System) that allows you to store data of various formats across a cluster. The second one is YARN, it is nothing but a processing unit of Hadoop. It allows parallel processing of data i.e. stored across the HDFS.

HDFS creates an abstraction of resources, let me simplify it for you. Similar as virtualization, you can see HDFS logically as a single unit for storing Big Data, but actually you are storing your data across multiple nodes in a distributed fashion. Here, you have master-slave architecture.

In HDFS, Namenode is a master node and Datanodes are slaves. Namenode contains the metadata about the data stored in Data nodes, like which data block is stored in which data node, where are the replications of the data block kept etc. The actual data is stored in Data Nodes.

I also want to add, we actually replicate the data blocks present in Data Nodes, and by default, the replication factor is 3. Since we are using commodity hardware and we know the failure rate of these hardwares are pretty high, so if one of the DataNodes fails, HDFS will still have the copy of those lost data blocks. That’s the reason we need to replicate the data block. You can configure replication factor based on your requirements.

* Hadoop-as-a-Solution

- The first problem is storing Big data. HDFS solved it, let’s know how.

HDFS provides a distributed way to store Big data. Your Data is stored in blocks in data nodes and you specify the size of each block. Basically, if you have 512MB of data and you have configured HDFS such that it will create 128 MB of data blocks. So HDFS will divide data into 4 blocks as 512/128=4 and store it across different DataNodes, it will also replicate the data blocks on different DataNodes.

It focuses on horizontal scaling instead of vertical scaling. You can always add some extra data nodes to HDFS cluster as and when required, instead of scaling up the resources of your data nodes. Let me summarize it for you basically for storing 1 TB of data I don’t need a 1TB system. You can instead do it on multiple 128GB systems or even less.

- Next problem was storing the variety of data. This problem is also addressed by HDFS.

With HDFS you can store all kinds of data whether it is structured, semi-structured or unstructured. Since in HDFS, there is no pre-dumping schema validation. And it also follows write once and read many model. Due to this, you can just write the data once and you can read it multiple times for finding insights.

- the third challenge was accessing & processing the data faster. Yes, this is one of the major challenges with Big Data. In order to solve it, we move processing to data and not data to processing. What does it mean? Instead of moving data to the master node and then processing it. In YARN, the processing logic is sent to the various slave nodes & then data is processed parallely across different slave nodes. Then the processed results are sent to the master node where the results is merged and the response is sent back to the client.

* When to use Hadoop ? 

Hadoop is used for:

    Search – Yahoo, Amazon, Zvents
    Log processing – Facebook, Yahoo
    Data Warehouse – Facebook, AOL
    Video and Image Analysis – New York Times, Eyealike

* When to not to use Hadoop ?

Following are some of those scenarios :

    Low Latency data access : Quick access to small parts of data
    Multiple data modification : Hadoop is a better fit only if we are primarily concerned about reading data and not writing data.
    Lots of small files : Hadoop is a better fit in scenarios, where we have few but large files.

* Hadoop-CERN Case Study

The Large Hadron Collider in Switzerland is one of the largest and most powerful machines in the world. It is equipped with around 150 million sensors, producing a petabyte of data every second, and the data is growing continuously.

CERN researches said that this data has been scaling up in terms of amount and complexity, and one of the important task is to serve these scalable requirements. So, they setup a Hadoop cluster. By using Hadoop, they limited their cost in hardware and complexity in maintenance.

* They integrated Oracle & Hadoop and they got advantages of integrating. Oracle, optimized their Online Transactional System & Hadoop provided them scalable distributed data processing platform. They designed a hybrid systems, and first they moved data from Oracle to Hadoop. Then, they executed query over Hadoop data from Oracle using Oracle APIs. They also used Hadoop data formats like Avro & Parquet for high performance analytics without need of changing the end-user apps connecting to Oracle.

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

(https://www.edureka.co/blog/hadoop-tutorial/?utm_source=blog&utm_medium=left-menu&utm_campaign=what-is-hadoop)

*  an interesting story on how Hadoop came into the picture and why is it so popular in the industry nowadays

So, it all started with two people, Mike Cafarella and Doug Cutting, who were in the process of building a search engine system that can index 1 billion pages. After their research, they estimated that such a system will cost around half a million dollars in hardware, with a monthly running cost of $30,000, which is quite expensive. However, they soon realized that their architecture will not be capable enough to work around with billions of pages on the web.

They came across a paper, published in 2003, that described the architecture of Google’s distributed file system, called GFS, which was being used in production at Google. Now, this paper on GFS proved to be something that they were looking for, and soon, they realized that it would solve all their problems of storing very large files that are generated as a part of the web crawl and indexing process. Later in 2004, Google published one more paper that introduced MapReduce to the world. Finally, these two papers led to the foundation of  the framework called “Hadoop“. Doug quoted on Google’s contribution in the development of Hadoop framework:

“Google is living a few years in the future and sending the rest of us messages.”

* Introduction

Social media is actually one of the most important factors in the evolution of Big Data as it provides information about the people’s behavior. You can look at the figure below and get an idea how much data is getting generated every minute:

* Big Data & Hadoop – Restaurant Analogy

Let us take an analogy of a restaurant to understand the problems associated with Big Data and how Hadoop solved that problem.

Bob is a businessman who has opened a small restaurant. Initially, in his restaurant, he used to receive two orders per hour and he had one chef with one food shelf in his restaurant which was sufficient enough to handle all the orders. 


----

Hadoop was developed, based on the paper written by Google on MapReduce system and it applies concepts of functional programming.
